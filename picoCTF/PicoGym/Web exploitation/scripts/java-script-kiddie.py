knownplaintext = bytearray(b'\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0D\x49\x48\x44\x52')
b = bytearray([int(x) for x in open("bytes", "r").read().split(" ")])
LEN = 16
potentialkeys = [
    [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []
]

for i in range(LEN):
    good_byte = knownplaintext[i]

    # Renamed shifter to key
    for key in range(10):
        # no j so just key*LEN
        candidate_byte = b[(key * LEN) % len(b) + i]
        if candidate_byte == good_byte:
            potentialkeys[i].append(key)

print(potentialkeys)


# for (var i = 0; i < LEN; i++){
#     shifter = key.charCodeAt(i) - 48;
# for (var j = 0; j < (bytes.length / LEN); j ++){
# result[(j * LEN) + i] = bytes[(((j + shifter) * LEN) % bytes.length) + i] --> line 114
# }

def print_potential_keys(s='', k=0):
    if k == 16:
        print(s)
        return

    for potkey in potentialkeys[k]:
        print_potential_keys(s + str(potkey), k + 1)


print_potential_keys()
